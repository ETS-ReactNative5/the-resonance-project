// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App snapshot renders the loading screen 1`] = `null`;

exports[`App snapshot renders the root without loading screen 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
        "overflow": "hidden",
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        collapsable={false}
        pointerEvents="auto"
        removeClippedSubviews={false}
        style={
          Array [
            Object {
              "flex": 1,
              "overflow": "hidden",
            },
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            Object {
              "opacity": 1,
            },
          ]
        }
      >
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            onLayout={[Function]}
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              enabled={false}
              hitSlop={
                Object {
                  "right": 50,
                }
              }
              maxDeltaY={20}
              minOffsetX={5}
              onGestureEvent={[Function]}
              onHandlerStateChange={[Function]}
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#eee",
                    "flex": 1,
                    "flexDirection": "column-reverse",
                    "overflow": "hidden",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <View
                    pointerEvents="auto"
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "opacity": 1,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                        "transform": Array [
                          Object {
                            "translateX": 0,
                          },
                          Object {
                            "translateY": 0,
                          },
                        ],
                      }
                    }
                  >
                    <View
                      accessibilityElementsHidden={false}
                      style={
                        Object {
                          "backgroundColor": "#fff",
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "backgroundColor": "#fff",
                            "flex": 1,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
                <View
                  onLayout={[Function]}
                  pointerEvents="box-none"
                  style={
                    Object {
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "backgroundColor": "#FFF",
                        "transform": Array [
                          Object {
                            "translateX": -750,
                          },
                        ],
                      }
                    }
                  >
                    <View
                      onLayout={[Function]}
                      pointerEvents="box-none"
                      style={
                        Object {
                          "backgroundColor": "#FFF",
                          "borderBottomColor": "#A7A7AA",
                          "borderBottomWidth": 0.5,
                          "height": 64,
                          "paddingBottom": 0,
                          "paddingLeft": 0,
                          "paddingRight": 0,
                          "paddingTop": 20,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flex": 1,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      pointerEvents="auto"
      style={
        Object {
          "bottom": 0,
          "elevation": 8,
          "left": 0,
          "right": 0,
        }
      }
    >
      <View
        onLayout={[Function]}
        pointerEvents="box-none"
        style={
          Object {
            "backgroundColor": "#fff",
            "borderTopColor": "rgba(0, 0, 0, .3)",
            "borderTopWidth": 0.5,
            "flexDirection": "row",
            "height": 49,
            "paddingBottom": 0,
            "paddingLeft": 0,
            "paddingRight": 0,
            "paddingTop": 0,
          }
        }
      >
        <View
          accessibilityLabel="Home, tab, 1 of 5"
          accessibilityRole="button"
          accessibilityStates={
            Array [
              "selected",
            ]
          }
          accessible={true}
          hitSlop={
            Object {
              "bottom": 5,
              "left": 15,
              "right": 15,
              "top": 0,
            }
          }
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "alignItems": "center",
                "flex": 1,
              },
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "flexDirection": "column",
                "justifyContent": "flex-end",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "height": 29,
                },
                false,
                Object {
                  "flex": 1,
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "minWidth": 25,
                  "opacity": 1,
                  "position": "absolute",
                  "width": "100%",
                }
              }
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight="30"
                bbWidth="30"
                fill="#ce2f1c"
                height={30}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "marginBottom": -3,
                    },
                    false,
                    Object {
                      "flex": 0,
                      "height": 30,
                      "width": 30,
                    },
                  ]
                }
                vbHeight={35.494}
                vbWidth={75.103}
                width={30}
                x="0px"
                y="0px"
              >
                <RNSVGGroup
                  fill={
                    Array [
                      0,
                      0.807843137254902,
                      0.1843137254901961,
                      0.10980392156862745,
                      1,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  font={Object {}}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth="1"
                  x={0}
                  y={0}
                >
                  <RNSVGPath
                    d="M10.051 7.25 68.984 7.25 75.103 0 37.551 0 0 0 12.051 14.281z"
                    fill={
                      Array [
                        0,
                        0,
                        0,
                        0,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={Array []}
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                  <RNSVGPath
                    d="M20.663 21.402 57.042 21.402 63.051 14.281 12.051 14.281 18.776 22.25 21.986 26.054z"
                    fill={
                      Array [
                        0,
                        0,
                        0,
                        0,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={Array []}
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                  <RNSVGPath
                    d="M23.994 28.434 29.952 35.494 45.151 35.494 51.109 28.434z"
                    fill={
                      Array [
                        0,
                        0,
                        0,
                        0,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={Array []}
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "minWidth": 25,
                  "opacity": 0,
                  "position": "absolute",
                  "width": "100%",
                }
              }
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight="30"
                bbWidth="30"
                fill="#ccc"
                height={30}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "marginBottom": -3,
                    },
                    false,
                    Object {
                      "flex": 0,
                      "height": 30,
                      "width": 30,
                    },
                  ]
                }
                vbHeight={35.494}
                vbWidth={75.103}
                width={30}
                x="0px"
                y="0px"
              >
                <RNSVGGroup
                  fill={
                    Array [
                      0,
                      0.8,
                      0.8,
                      0.8,
                      1,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  font={Object {}}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth="1"
                  x={0}
                  y={0}
                >
                  <RNSVGPath
                    d="M10.051 7.25 68.984 7.25 75.103 0 37.551 0 0 0 12.051 14.281z"
                    fill={
                      Array [
                        0,
                        0,
                        0,
                        0,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={Array []}
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                  <RNSVGPath
                    d="M20.663 21.402 57.042 21.402 63.051 14.281 12.051 14.281 18.776 22.25 21.986 26.054z"
                    fill={
                      Array [
                        0,
                        0,
                        0,
                        0,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={Array []}
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                  <RNSVGPath
                    d="M23.994 28.434 29.952 35.494 45.151 35.494 51.109 28.434z"
                    fill={
                      Array [
                        0,
                        0,
                        0,
                        0,
                        1,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={1}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={Array []}
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth="1"
                    x={0}
                    y={0}
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <Text
            allowFontScaling={true}
            numberOfLines={1}
            style={
              Object {
                "backgroundColor": "transparent",
                "color": "#ce2f1c",
                "fontSize": 11,
                "marginBottom": 1.5,
                "textAlign": "center",
              }
            }
          >
            Home
          </Text>
        </View>
        <View
          accessibilityLabel="Media, tab, 2 of 5"
          accessibilityRole="button"
          accessibilityStates={Array []}
          accessible={true}
          hitSlop={
            Object {
              "bottom": 5,
              "left": 15,
              "right": 15,
              "top": 0,
            }
          }
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "alignItems": "center",
                "flex": 1,
              },
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "flexDirection": "column",
                "justifyContent": "flex-end",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "height": 29,
                },
                false,
                Object {
                  "flex": 1,
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "minWidth": 25,
                  "opacity": 0,
                  "position": "absolute",
                  "width": "100%",
                }
              }
            >
              <Text />
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "minWidth": 25,
                  "opacity": 1,
                  "position": "absolute",
                  "width": "100%",
                }
              }
            >
              <Text />
            </View>
          </View>
          <Text
            allowFontScaling={true}
            numberOfLines={1}
            style={
              Object {
                "backgroundColor": "transparent",
                "color": "#8E8E93",
                "fontSize": 11,
                "marginBottom": 1.5,
                "textAlign": "center",
              }
            }
          >
            Media
          </Text>
        </View>
        <View
          accessibilityLabel="Engage, tab, 3 of 5"
          accessibilityRole="button"
          accessibilityStates={Array []}
          accessible={true}
          hitSlop={
            Object {
              "bottom": 5,
              "left": 15,
              "right": 15,
              "top": 0,
            }
          }
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "alignItems": "center",
                "flex": 1,
              },
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "flexDirection": "column",
                "justifyContent": "flex-end",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "height": 29,
                },
                false,
                Object {
                  "flex": 1,
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "minWidth": 25,
                  "opacity": 0,
                  "position": "absolute",
                  "width": "100%",
                }
              }
            >
              <Text />
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "minWidth": 25,
                  "opacity": 1,
                  "position": "absolute",
                  "width": "100%",
                }
              }
            >
              <Text />
            </View>
          </View>
          <Text
            allowFontScaling={true}
            numberOfLines={1}
            style={
              Object {
                "backgroundColor": "transparent",
                "color": "#8E8E93",
                "fontSize": 11,
                "marginBottom": 1.5,
                "textAlign": "center",
              }
            }
          >
            Engage
          </Text>
        </View>
        <View
          accessibilityLabel="Groups, tab, 4 of 5"
          accessibilityRole="button"
          accessibilityStates={Array []}
          accessible={true}
          hitSlop={
            Object {
              "bottom": 5,
              "left": 15,
              "right": 15,
              "top": 0,
            }
          }
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "alignItems": "center",
                "flex": 1,
              },
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "flexDirection": "column",
                "justifyContent": "flex-end",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "height": 29,
                },
                false,
                Object {
                  "flex": 1,
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "minWidth": 25,
                  "opacity": 0,
                  "position": "absolute",
                  "width": "100%",
                }
              }
            >
              <Text />
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "minWidth": 25,
                  "opacity": 1,
                  "position": "absolute",
                  "width": "100%",
                }
              }
            >
              <Text />
            </View>
          </View>
          <Text
            allowFontScaling={true}
            numberOfLines={1}
            style={
              Object {
                "backgroundColor": "transparent",
                "color": "#8E8E93",
                "fontSize": 11,
                "marginBottom": 1.5,
                "textAlign": "center",
              }
            }
          >
            Groups
          </Text>
        </View>
        <View
          accessibilityLabel="Giving, tab, 5 of 5"
          accessibilityRole="button"
          accessibilityStates={Array []}
          accessible={true}
          hitSlop={
            Object {
              "bottom": 5,
              "left": 15,
              "right": 15,
              "top": 0,
            }
          }
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "alignItems": "center",
                "flex": 1,
              },
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "flexDirection": "column",
                "justifyContent": "flex-end",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "height": 29,
                },
                false,
                Object {
                  "flex": 1,
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "minWidth": 25,
                  "opacity": 0,
                  "position": "absolute",
                  "width": "100%",
                }
              }
            >
              <Text />
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "minWidth": 25,
                  "opacity": 1,
                  "position": "absolute",
                  "width": "100%",
                }
              }
            >
              <Text />
            </View>
          </View>
          <Text
            allowFontScaling={true}
            numberOfLines={1}
            style={
              Object {
                "backgroundColor": "transparent",
                "color": "#8E8E93",
                "fontSize": 11,
                "marginBottom": 1.5,
                "textAlign": "center",
              }
            }
          >
            Giving
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;
